/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'

    // Generate IntelliJ IDEA project files
    id 'idea'

    // Generates tests reports
    id 'jacoco'

    // Performs quality checks on source files and generates reports
    id 'pmd'
}

group 'es2_groupbf'
version '1.0.0'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.1'

    // Use OpenCSV csv parser.
    implementation 'com.opencsv:opencsv:5.7.1'

    // Use ProgressBar loading bar.
    implementation 'me.tongfei:progressbar:0.9.5'
}

application {
    // Define the main class for the application.
    mainClass = 'es2_groupbf.App'
}

jar {
    manifest {
        attributes 'Specification-Title': 'Hotel H2U'
        attributes 'Specification-Version': getArchiveVersion()
        attributes 'Specification-Vendor': 'ES2_Group_BF'
        attributes 'Implementation-Title': 'es2_groupbf.App'
        attributes 'Implementation-Version': 'build'
        attributes 'Implementation-Vendor': 'ES2_Group_BF'
        attributes 'Main-Class': 'es2_groupbf.App'
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
    testLogging.showStandardStreams = true
    testLogging.events("PASSED", "SKIPPED", "FAILED")
}

jacoco {
    toolVersion = "0.8.8"
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = false
        csv.required = true
        html.required = true
        html.outputLocation = file("${buildDir}/jacoco-output")
    }
}

pmd {
    consoleOutput = true
    ignoreFailures = true
    toolVersion = "6.52.0"
    rulesMinimumPriority = 5
    reportsDir = file("${buildDir}/pmd-output")
    ruleSetFiles = files("${rootDir}/config/pmd/custom-ruleset.xml")
    ruleSets = []
}